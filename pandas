使用pandas实现筛选出指定列值所对应的行
Pandas中获取数据有以下几种方法：布尔索引，位置索引，标签索引，使用API
>>> import pandas as pd
>>> import dumpy as np
### 布尔索引，df为数据库名称，A为列名，foo为该列下的具体内容
>>> df[df['A'] == 'foo']

### 位置索引,使用iloc方法，根据索引的位置来查找数据的，这个例子休要先找出符合条件的行所在位置
>>> mask = df['A'] == 'foo'
>>> pos = np.flatnonzero(mask)
>>> df.iloc[pos]
### 常见的iloc用法
>>> df.iloc[:3,1:3]

### 标签索引，如果dataframe的行列都是有标签的，那么使用loc方法就非常合适
>>> df.set_index('A',append=True, drop=False).xs('foo',level=1)
### 更直接的做法
>>> df.index=df['A'] #将A列作为dataframe的行索引
>>> df.loc['foo',:]
### 使用布尔
>>> df.loc[df['A']=='foo']

### 使用API, pd.DataFrame.query方法在数据量大的时候，效率比常规的方法更高效,多条件
>>> df.query('A="foo" | A=="bar"')

### 筛选出列值等于标量的行，用==
>>> df.loc[df['column_name'] == some_value]

### 筛选出列值属于某个范围内的行，用isin
>>> df.loc[df['column_name'].isin(some_value)] # some_value是可迭代对象

### 多种条件限制时使用&，&的优先级高于>=或<=，所以要注意括号的使用
>>> df.loc[(df['column_name'] >= A) & (df['column_name'] <= B)]

### 筛选出列值不等于某个/些值的行
>>> df.loc[df['column_name'] != 'some_value']
>>> df.loc[~df['column_name'].isin('some_value')]  #～取反
